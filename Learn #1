from ultralytics import YOLO
import cv2
import cvzone
import math


# cap = cv2.VideoCapture(0, cv2.CAP_DSHOW) #for webcam
# cap.set(3, 1920)
# cap.set(4, 1080)

cap = cv2.VideoCapture("../Videos/cat.mp4") #for video


model = YOLO("../Yolo-Weight/yolov8n.pt")

classNames = ["person", "hand", "car", "motorbike", "aeroplane", "bus", "train", "truck", "boat",
              "traffic light", "fire hydrant", "camera", "parking meter", "bench", "bird", "cat",
              "dog", "horse", "iphone", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella",
              "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat",
              "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup",
              "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli",
              "carrot", "hot dog", "pizza", "donut", "cake", "chair", "sofa", "pottedplant", "bed",
              "diningtable", "toilet", "tvmonitor", "laptop", "mouse", "remote", "keyboard", "cell phone",
              "microwave", "oven", "toaster", "sink", "watch", "book", "clock", "vase", "scissors",
              "wallet", "piggy bank", "pen", "gatsby"
              ]

if not cap.isOpened():
    print("Could not open video device")

while True:
    ret, frame = cap.read()
    result = model(frame, stream=True)
    for r in result:
        boxes = r.boxes
        for box in boxes:

            #Bounding Box
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2)
            # cv2.rectangle(frame, (x1, y1), (x2, y2), (255, 0, 255), 3)
            w, h = x2 - x1, y2 - y1
            cvzone.cornerRect(frame, (x1, y1, w, h))

            #Confidence
            conf = math.ceil((box.conf[0]*100))/100

            #Classname
            cls = int(box.cls[0])
            print("Detected class index:", cls)  # Add this line to print the class index

            if 0 <= cls < len(classNames):
                label = f'{classNames[cls]} {conf}'
                cvzone.putTextRect(frame, f'{classNames[cls]} {conf}', (max(0, x1), max(50, y1 - 20)),scale=3, thickness=3)


    cv2.imshow("Camera", frame)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
